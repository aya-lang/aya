
[4 0 5 2 7 3 2 5 6 6]:lst;

.# Standard implementation
{l$ : h,
    .# If the list is more than 1 item long, perform the operation
    .#   otherwise just leave the original list on the stack
    l .E 1 > {
        .# The head from the list
        V:h;;
        .# [ sort items less than h, h, sort items larger than h]
        [l,,h:<]qs h [l,,h>]qs JJ
    } ?
}:q;


.# Optimized implementation with no global vars
.# We define this function this way since the first call must copy the list
.# Other calls may use the reference.
{l$ :
    q({l : h,
        .# If the list is more than 1 item long, perform the operation
        .#   otherwise just leave the original list on the stack
        l .E 1 > {
            .# The head from the list
            V:h;;
            .# [ sort items less than h, h, sort items larger than h]
            [l,,h:<]q h [l,,h>]q JJ
        } ?
    }),
    
    l q
}:qs;

lst :P
lst qs :P

.# Golfed version of the standard implementation
.# {l$:x,l.E1>{V:x\{x:<}Iq\Jl{x>}IqJ}?}:q;

.# Stack only version
{.E1> {$\; :&V$@\< @\ :&#! @:&@.i \@.i qss @@qss JJ} ?}:qss;

.# Stack only version with no global vars
.# {.E1> {$\; :&V$@\< @\ :&#! @:&@.i \@.i _ @@_ JJ} ?} :{1, :_} :+

.# Quicksort benchmark and example output
.# aya> 10 R :# {; [100000,;.Q] {qs;}.time} :& .E \W\/
.# [ 497 496 504 518 502 495 525 508 498 521 ] 506.4 

.# Sorting 100,000 items
"Sorting 10,000 items..." :P
[10000,;.Q] {qs;}.time :ms;
"Took $(ms)ms" :P
