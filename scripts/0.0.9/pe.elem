.# Problem 1 (16 chars)
999R{15gcd1=!}IS

.# Problem 6 (12 chars)
hR_S2^\2#^S-

.# hR            Generate a list [1,2..100]
.#   _           Duplicate the list
.#    S2^        Evaluate the sum of the list and square it
.#       \       Bring the other list to the top of the stack
.#        2#^    Square each element in the list
.#           S-  Subtract the sum of this list from the previous sum


.# Problem 8 (31 chars)
.# Where `list` is the sequence of numbers
list 13R{_@_@I{*}.F\@#.)}987%;;.Amax

.# 13R                                Create a list for indexing (13 consecutive indices)
.#    {_@_@           }                 Duplicate the list and the index list and bring them to the top
.#         I          }                 Get 13 consecutive numbers in the sequence
.#          {*}.F     }                 Take their product
.#               \@   }                 Move the list and the indices back to the top
.#                 #.)}                 Increment the indices
.#                     987%           Repeat (1000-13) times
.#                         ;;         Remove the list and indices from the stack
.#                           .A max   Take the entire stack as a list and return the max value


.# Problem 34 (29 chars)
[3 5E,,_P#{'0-iM!}S1+i=]S

.# [3 5E                  ]      List comprehension on the numbers [3,4..100000]
.#      ,,                ]        Don't map anything to the list, begin a filter
.#        _P              ]        Duplicate the original number and convert it to a string
.#          #{      }     ]        Map the block to each character in the string
.#            '0-   }     ]          Subtract the character '0'
.#               i  }     ]          Cast the character to an int
.#                M!}     ]          Compute the factorial
.#                   S1+  ]        Sum the list and add 1
.#                      i ]        Cast the double to an int
.#                       =]        Compare it to the duplication made earlier
.#                         S     Compute the sum of the LC

.# Problem 48 (11 chars)
kR#{_^}SdE%

.# kR  			 Generate a list from 1 to 1000
.#   #{_^}       Pow each element
.#        S      Sum the list
.#         dE%   mod 10000000000 to get the last 10 digits