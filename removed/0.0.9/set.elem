.{? type: set
    The set type is a simple list type where there exits no duplicate elements.
    Create a set by entering a list followed by the set constructor
.}

{@set,
  attr "list"

  {lL, [l :~] set MO}:new;

  .#? A (set) set.in\n  tests if an item is in a set
  {item self, self.list item N\;(-1)=!}:in;

  .#? A (set) set.add\n  add an item to a set\n  overloaded operator: +
  {item self, {s.list [item] K;}{}item self.in?self}:add;
  {set.add}:plus;

  .#? A (set) set.rem\n  remove an item from a set\n  overloaded operator: -
  {item self,
    self.list [item] :-
  }:rem;
  {set.rem}:minus;

  .#? (set) set.len\n  returns the number of elements in the set
  {.listE}:len;

  .#? (set) set.index\n  index operator overload for set
  {self index, self.list index I}:index;


  .#? (set) set.clear\n  clear the contents of a set
  {self, [] self.setlist self}:clear;

  {.listP"set: "\+}:show;
}
