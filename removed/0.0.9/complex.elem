.{? type: complex
    The complex type provides operations for manipulation functions for complex numbers.

    Complex numbers can be created by entering the imaginary part and then the `im` constructor.
      3im 1 + => 1+3i
      4im => 4im
.}

{@complex,
  attr "real imag"

  {imagN, [0 imag] complex MO}:new;

  .#? (complex) complex.show\n  convert a complex number to a string
  {self : sign,
    {""}{"+"} self.imag 0 .> ? :sign;
    {self.real sign+}{""} self.real 0 = ?
    "$(self.imag)i" +
  }:show;

	.#? (complex) complex.conj\n  complex conjugate
  {self, [self.real self.imag!] complex MO}:conj;

	.#? N complex.cast\n  cast a number to a complex number
  {num,
    if (num 'N isa) {
      [0 0] complex MO : out
      num out.setreal
    } {
      if (num Mw ".complex" =) {
        num
      } {
        "complex.conv: cannot convert $num to an imag number" .D
      }
    }
  }:cast;

  .#? N|(complex) N|(complex) complex.plus\n  add two complex numbers
  {a b,
    a complex.cast:a;
    b complex.cast:b;

    [a.real b.real+ a.imag b.imag+] complex MO
  }:plus;

  .#? N|(complex) N|(complex) complex.minus\n  subtract two complex numbers
  {a b,
    a complex.cast:a;
    b complex.cast:b;

    [a.real b.real- a.imag b.imag-] complex MO
  }:minus;

  .#? N|(complex) N|(complex) complex.star\n  multiply two complex numbers
  {a b : aim bim res,
    a complex.cast:a;
    b complex.cast:b;

    [a.real b.real* a.imag b.imag*! +
      a.real b.imag* b.real a.imag* +] complex MO
  }:star;

  .#? N|(complex) N|(complex) complex.fslash\n  divide two complex numbers
  {a b : bconj,
    a complex.cast:a;
    b complex.cast:b;
    b.conj:bconj;

    a bconj * b bconj * :b;:a;

    [a.real b.real/ a.imag b.real/] complex MO

  }:fslash;

  .#? N|(complex) N complex.pow\n  take the nth power of a complex numbers
  {cplx expN,
    "complex.pow: exponent must be a positive whole number" exp1< conderr
    cplx {_}expV%
    {complex.star}expV%
  }:pow;

  .#? (complex) complex.mag\n  magnitude of a complex number
  {self,
    self.real 2^ self.imag 2^ + Mq
  }:mag;
  
  .#? (complex) (complex) complex.eq\n  test if two complex numbers are equal
  {a b,
    a complex.cast:a;
    b complex.cast:b;
    a.imag b.imag = a.real b.real = &
  }:eq;

}

.#? N im\n  create a complex number
{complex!}:im;
