from ::io import ::path

module image
export ::image

class image

def image::__init__ {r g b a width height meta self,
    r self.:r;
    g self.:g;
    b self.:b;
    a self.:a;
    width self.:width;
    height self.:height;
    meta self.:meta;
}

def image::read {filename cls : img image^ path^,
    filename :(image.read) :img;
    img.r img.g img.b img.a img.width img.height img.meta image!
}

def image::__repr__ {self,
    "(image $(self.width)x$(self.height))"
}

def image::write {filename self : path^,
    self filename :(image.write)
}

def image::pixels {self,
    [self.r self.g self.b self.a] .T
}

def image::pixels_rgb {self,
    [self.r self.g self.b] .T
}

def image::channels {self,
    [self.r self.g self.b self.a]
}
