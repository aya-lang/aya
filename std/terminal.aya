require color {color colors}

:{
    colors.white :fg;
    colors.black :bg;
}:term_state;

def ::clear {"\{x1b}[2J".P}
def ::clearline {"\{x1b}[1:J\{x1b}[1G".P}

def ::_setfgstr {c::color, "\{x1b}[38;2;$(c.r);$(c.g);$(c.b)m" }
def ::_setbgstr {c::color, "\{x1b}[48;2;$(c.r);$(c.g);$(c.b)m" }

def ::setfg {c::color : term_state^ _setfgstr^,
    c term_state.:fg;
    c _setfgstr .P
}

def ::setbg {c::color : term_state^ _setbgstr^,
    c term_state.:bg;
    c _setbgstr .P
}

def ::bold      { "\{x1b}[1m" "\{x1b}[22m" .? .P}
def ::italic    { "\{x1b}[3m" "\{x1b}[23m" .? .P}
def ::underline { "\{x1b}[4m" "\{x1b}[24m" .? .P}
def ::strike    { "\{x1b}[9m" "\{x1b}[29m" .? .P}

def ::reset_font {: bold^ italic^ underline^ strike^ ,
    0 bold
    0 italic
    0 underline
    0 strike
}

def ::reset_color {: colors^ setfg^ setbg^ ,
    colors.white setfg
    colors.black setbg
}

def ::replcolor {c::color : colors^ _setfgstr^ ,
    [c _setfgstr
     "aya> "
     colors.white _setfgstr]W
    :(sys.alterprompt)
}

def ::print_color {value c::color : term_state^ setfg^ prev_fg,
    term_state.fg :prev_fg;
    c setfg
    value P .P
    prev_fg setfg
}

def ::println_color {value c::color : print_color^,
    value c print_color
    "" :P
}
