.# This file is a part of Aya: https://github.com/nick-paul/aya-lang

.# docs.aya
.# Basic documentation for Aya that appears in the quicksearch

.{? docs: comments
   .# this is a line comment
   .{
     this is a block comment
   .\}

   .#? this line will be added to interactive help
   .{?
      these lines will be
      added to interactive help
   .\}
.}

.{? docs: argument type key
  ::num - num
  ::block - block
  ::char - character
  ::str - string
  ::any - any
  ::dict - dict
  ::sym - symbol
.}

.{? docs: ranges
  ranges are used in list comprehension notation for creating quick lists
  they can be built from all number types, characters, strings, and list literals
  examples:
   [2,] => [1 2]
   [2 5,] => [2 3 4 5]
   [0 2 6,] => [0 2 4 6]
   ['a 'c,] => [a b c]
   [\"hi\",] => [h i]
   [[1 2],] => [1 2]
.}

.{? docs: list comprehension
  a range is always required. map and filter blocks are not.

  syntax:
  [
    <range>,
    <map>,
    <filter1>,<filter2>,..<filterN>
  ]
.}

.{? docs: blocks
  blocks are containers for a group of operations and a list of arguments.
  syntax:
    {<expr>}
    {<args> , <expr>}
    {<args> : <locals> , <expr>}
    {: <locals> , <expr>}
.}

.{? docs: dictionaries
  dicts are created using the following syntax
  {, val1:key1 val2:key2 ... valN:keyN}
.}

.{? docs: special characters
  unicode: '\U263A' => \{U263A}
  named:   '\in' => \{in}
  strings: "I \\{heart} element" => "I \{heart} element"
.}

.{? docs: negative numbers
  use :<number> or :-<number> for number literals only
  use the (T) operator to negate a variable
.}

.{? docs: list grabbing
  List literals can grab items from the outer stack
  Use the format `... [num| ...]` where `num` is an num literal
  ex: 1 2 [1| 7 6] => 1 [2 7 6]
  ex: 4 [1|10,] => [4 5 6 7 8 9 10]
.}

.{? docs: constants
  use `:Nc` where N is:
  0: pi
  1: e
  2: double max
  3: double min
  4: NaN
  5: +inf
  6: -inf
  7: int max
  8: int min
  9: system file separator
  10: system path separator
  11: char max value
  12: system line separator
.}
