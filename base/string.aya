.# string.aya
.# Defines functions for working with strings and regular expressions

import "char"
import "types"

.#? L S|C join\n  join a list of strings with another string or char
{l s, l#s B; S}:join;

.#? S alldigits\n  tests if all chars in a string are digits
{.E \ #isdigit S =}:alldigits;

.#? S trim\n  remove whitespace from start and end of string
{"^\\s+|\\s+$" |S}:trim;

.#? SCI strleftpad\n  left pad string S so it is at least length I using char C
{str::str pad::char len::num,
  str.E len\- {pad\K}\%
}:strleftpad;

.#? SCI strrightpad\n  right pad string S so it is at least length I using char C
{str::str pad::char len::num,
  str.E len\- {padK}\%
}:strrightpad;

.#? S isnum\n  returns true if the string is a valid number
{.! :T ::num =}:isnum;

.#? S tocamel\n  convert a string with underscores to camel case
{str,
  for 'c ['a'z,] {
    "_$c" c! str .& :str;
  };
  str
}:tocamel;


.#? L<L> matstr\n  print a list of lists in matrix format
{
  _ [1|,~.A#{PE}] .# Calculate the length of each
                  .#   entry mapped as a string
  .F{.<}F 2+      .# Find the maximum and add two
  #{#{\P\.>}S}    .# Pad each entry in the original
                  .#   by the max and sum each row
  '\n' join       .# Join the rows with a newline
}:matstr;

.#? str sep csvstr\n  convert a csv string into a 2d list
{str sep,
  str "\n" |
  # {sep | # {.! _:T ::str = {trim} ?} }
  makesquare
}:fromcsvstr;

{list sep na,
  list #{
    .# If it is na, make it emptystr
    #{_ na = {;""} ?}
    sep join
  } "\n" join
}:tocsvstr;




{str,
  str ERB; # {i,
    str iV I iswhitespace
    {str i :(str i I toupper)}
    ?
  };
  str 0:(str 0I toupper)
}:titlecase;

{:z,#{zB:z3%+}}:scramble;
{:z,#{zB:z3%-}}:descramble;






.# REGEX FUNCTIONS

{, .# begin regex module

.# Returns all URLs in a string
{"http[|s]://[^ |>|<]+"&}:geturls;

.# Return the first match of a regular expression
{&0I}:firstmatch;

.# Return the last match of a regular expression
{&1!I}:lastmatch;

.# Remove all matches of a regex in a string
{|S}:removeall;

.# Removes all spaces from a string
{"\\s+"|S}:trimall;

.# Returns true if the input string contains spaces or tabs
{_E\ "[\\t|\\s]" &E=!}:iswhitespace;

}:rgx;
