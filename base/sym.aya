.# This file is a part of aya: https://github.com/aya-lang/aya

.# Metatable definition for the built-in `sym` type

:{
    .{? ::sym .op

        Return a block containing the operator
        Does not currently work with quoted operators (TODO: fix internal representation)

        aya> ::+ .op
        {+}
        aya> ::Ms .op
        {Ms}
        aya> ::"Ms" .op
        Error
    .}
    {sym, 
        ::ops Ma
        .# filter out items where the symbol doesn't match
        :# {k v, v.overload sym H {v}?}
        .# Grab the `call` block
        :V.[0].call.`
    }:op;

    .# Get a dict of all operator/symbol pairs
    :{
        "overloadable" M? :# {
            .# Get <name> <op> as strings
            :& "overloadable:.*$" & .[0] " " S .[-1] \ " " S .[0]
            .# Lambda to apply to each <name> <op>
            ({name op,
                .# If the name is "__add__/__radd__", only use the first one
                name '/ S .[0]:name;
                .# Attempt to parse the op ( operator __each__ ":#" will fail)
                .# And assign the op to its name
                {op.~ name :=} {;} .K
            })
        }
    }:_overloads;

    {s, {::_.M._overloads s I} {; s :C.~ } .K }:op;


    .{? ::sym .rev

        Return the reverse overload for a symbol
        - If the symbol is an operator and has a reverse overload, return it
        - If the symbol is an operator but does not have a reverse overload,
            return the original operator
        - If the symbol is not an operator, throw an error

        aya> ::+ .rev
        ::__radd__
    .}

    :{
        .# Get the overload list for all ops
        ::ops Ma :#{.overload}
        .# Get all ops with non-zero length overloads
        .[{E 0 = !}]
        .# For each overload list
        :V :#{l,
            .# Assign the reversed op to the standard one
            .# If the list length is 1, standard will be assigned to itself
            l.[-1] l.[0] :=
        }
    }:_rev_overloads;

    { ::_.M._rev_overloads \ I }:rev;

}
.# Merge with sym metatable
::_ .M \.+
